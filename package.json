{
  "name": "nest-test",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "commit": "commit",
    "lint": "eslint --fix \"{apps,libs,migrations,src,test}/**/*.ts\"",
    "lint:check": "eslint \"{apps,libs,migrations,src,test}/**/*.ts\"",
    "lint:check:errors": "eslint --quiet \"{apps,libs,migrations,src,test}/**/*.ts\"",
    "orm:mig:create": "if [ -f \"$CONFIG\" ]; then mikro-orm migration:create && npm run lint; else 'ERROR: Define CONFIG environment variable with path to `env.php`.' 1>&2; fi",
    "orm:mig:down": "if [ -f \"$CONFIG\" ]; then mikro-orm migration:down; else 'ERROR: Define CONFIG environment variable with path to `env.php`.' 1>&2; fi",
    "orm:mig:list": "if [ -f \"$CONFIG\" ]; then mikro-orm migration:list; else 'ERROR: Define CONFIG environment variable with path to `env.php`.' 1>&2; fi",
    "orm:mig:pending": "if [ -f \"$CONFIG\" ]; then mikro-orm migration:pending; else 'ERROR: Define CONFIG environment variable with path to `env.php`.' 1>&2; fi",
    "orm:mig:up": "if [ -f \"$CONFIG\" ]; then mikro-orm migration:up; else 'ERROR: Define CONFIG environment variable with path to `env.php`.' 1>&2; fi",
    "orm:sch:debug": "if [ -f \"$CONFIG\" ]; then mikro-orm schema:create -d; else 'ERROR: Define CONFIG environment variable with path to `env.php`.' 1>&2; fi",
    "orm:sch:init": "if [ -f \"$CONFIG\" ]; then mikro-orm schema:create -r; else 'ERROR: Define CONFIG environment variable with path to `env.php`.' 1>&2; fi",
    "orm:sch:update": "if [ -f \"$CONFIG\" ]; then mikro-orm schema:update -r; else 'ERROR: Define CONFIG environment variable with path to `env.php`.' 1>&2; fi",
    "prebuild": "rimraf dist temp",
    "start": "nest start",
    "start:debug": "nest start --debug --watch",
    "start:dev": "nest start --watch",
    "start:prod": "node dist/main",
    "test": "jest",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:watch": "jest --watch"
  },
  "dependencies": {
    "@mikro-orm/core": "^5.0.0-dev.598",
    "@mikro-orm/migrations": "^5.0.0-dev.598",
    "@mikro-orm/nestjs": "^4.3.1",
    "@mikro-orm/postgresql": "^5.0.0-dev.598",
    "@mikro-orm/reflection": "^5.0.0-dev.598",
    "@mikro-orm/sql-highlighter": "^1.0.1",
    "@nestjs/common": "^8.2.4",
    "@nestjs/config": "^1.1.5",
    "@nestjs/core": "^8.2.4",
    "@nestjs/mapped-types": "^1.0.1",
    "@nestjs/microservices": "^8.2.4",
    "@nestjs/platform-fastify": "^8.2.4",
    "@nestjs/schedule": "^1.0.2",
    "aedes": "^0.46.2",
    "aedes-server-factory": "^0.2.1",
    "cache-manager": "^3.6.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "clone": "^2.1.2",
    "cron": "^1.8.2",
    "jsmodbus": "^4.0.6",
    "mqtt": "^4.3.2",
    "nest-mqtt": "github:128keaton/nest-mqtt",
    "ping": "^0.4.1",
    "pino-pretty": "^7.3.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.5.1",
    "validator": "^13.7.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^16.0.1",
    "@commitlint/config-conventional": "^16.0.0",
    "@commitlint/prompt-cli": "^16.0.0",
    "@mikro-orm/cli": "^5.0.0-dev.598",
    "@mikro-orm/seeder": "^5.0.0-dev.598",
    "@nestjs/cli": "^8.1.6",
    "@nestjs/testing": "^8.2.4",
    "@types/cache-manager": "^3.4.2",
    "@types/cron": "^1.7.3",
    "@types/jest": "^27.4.0",
    "@types/node": "^17.0.5",
    "@types/ping": "^0.4.1",
    "@types/serialport": "^8.0.2",
    "@types/validator": "^13.7.0",
    "@typescript-eslint/eslint-plugin": "^5.8.1",
    "@typescript-eslint/parser": "^5.8.1",
    "conventional-recommended-bump": "^6.1.0",
    "eslint": "^8.5.0",
    "eslint-plugin-import": "^2.25.3",
    "eslint-plugin-tsdoc": "^0.2.14",
    "jest": "^27.4.5",
    "standard-changelog": "^2.0.27",
    "ts-jest": "^27.1.2",
    "ts-node": "^10.4.0",
    "typescript": "^4.5.4"
  },
  "engines": {
    "node": ">=16"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
    "mikro-orm": {
    "configPaths": [
      "./src/mikro-orm.config.ts",
      "./dist/mikro-orm.config.js"
    ],
    "useTsNode": true
  },
  "os": [
    "linux"
  ]
}
